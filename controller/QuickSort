package br.edu.fateczl;

public class QuickSort {

	public QuickSort() {
		super();
	}
	
	public long[] quickSort(long[] vetor, long primeiraPosicao, long ultimaPosicao) {
		if (ultimaPosicao > primeiraPosicao) {
			long pivo = recursivaQuickSort(vetor, primeiraPosicao, ultimaPosicao);
			quickSort(vetor, primeiraPosicao, pivo - 1);
			quickSort(vetor, pivo + 1, ultimaPosicao);
		}
		
		return vetor;
	}
	
	private long recursivaQuickSort(long[] vetor, long primeiraPosicao, long ultimaPosicao) {
		long pivo = vetor[(int) primeiraPosicao];
		long ponteiroEsquerda = primeiraPosicao + 1;
		long ponteiroDireita = ultimaPosicao;
			
		while (ponteiroEsquerda <= ponteiroDireita) {
			while (vetor[(int) ponteiroEsquerda] <= pivo && ponteiroEsquerda <= ponteiroDireita) {
				ponteiroEsquerda++;
			}
			while (vetor[(int) ponteiroDireita] > pivo && ponteiroEsquerda <= ponteiroDireita) {
				ponteiroDireita--;
			}
			if (ponteiroEsquerda < ponteiroDireita) {
				troca(vetor, ponteiroEsquerda, ponteiroDireita);
				ponteiroEsquerda++;
				ponteiroDireita--;
			}
		}
		
		troca(vetor, primeiraPosicao, ponteiroDireita);
		
		return ponteiroDireita;
	}
	
	private void troca(long[] vetor, long i, long j) {
		long aux = vetor[(int) i];
		vetor[(int) i] = vetor[(int) j];
		vetor[(int) j] = aux;
	}
}
