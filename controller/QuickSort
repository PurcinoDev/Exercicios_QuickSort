package br.edu.fateczl;

public class QuickSort {

	public QuickSort() {
		super();
	}
	
	public long[] quickSort(long[] vetor, long primeiraPosicao, long ultimaPosicao) {
		if (vetor.length > 1) {
			long pivo = primeiraPosicao;
			long ponteiroEsquerda = primeiraPosicao + 1;
			long ponteiroDireita = ultimaPosicao;
			do {
				do {
					ponteiroEsquerda++;
				} while (vetor[(int) ponteiroEsquerda] <= pivo && ponteiroEsquerda < ponteiroDireita);
				do {
					ponteiroDireita--;
				} while (vetor[(int) ponteiroDireita] > pivo && ponteiroEsquerda <= ponteiroDireita);
				if (ponteiroEsquerda < ponteiroDireita) {
					troca(vetor, ponteiroEsquerda, ponteiroDireita);
					ponteiroEsquerda++;
					ponteiroDireita--;
				}
			} while (ponteiroEsquerda < ponteiroDireita);
			troca(vetor, ponteiroDireita, pivo);
			long[] a = divide(vetor, pivo + 1);
			long[] b = divide(vetor, pivo - 1);
			
			quickSort(a, 0, a.length - 1);
			quickSort(b, 0, b.length - 1);
		}
		return vetor;
	}
	
	private long[] troca(long[] vetor, long ponteiroEsquerda, long ponteiroDireita) {
		long aux = vetor[(int) ponteiroEsquerda];
		vetor[(int) ponteiroEsquerda] = vetor[(int) ponteiroDireita];
		vetor[(int) ponteiroDireita] = aux;
		return vetor;
	}
	
	private long[] divide(long[] vetor, long pivo) {
		long[] subVetor = new long[(int) pivo];
		return subVetor;
	}
}
